{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/oauth/index.js","webpack:///./node_modules/oauth/lib/_utils.js","webpack:///./node_modules/oauth/lib/oauth.js","webpack:///./node_modules/oauth/lib/oauth2.js","webpack:///./node_modules/oauth/lib/sha1.js","webpack:///./src/main/createCaptureWindow.js","webpack:///./src/main/createFileManager.js","webpack:///./src/main/createPreviewWindow.js","webpack:///./src/main/createTwitterClient.js","webpack:///./src/main/createTwitterLoginManager.js","webpack:///./src/main/createTwitterOAuth.js","webpack:///./src/main/index.js","webpack:///./src/main/trimDesktop.js","webpack:///external \"crypto\"","webpack:///external \"electron\"","webpack:///external \"events\"","webpack:///external \"fs\"","webpack:///external \"http\"","webpack:///external \"https\"","webpack:///external \"path\"","webpack:///external \"querystring\"","webpack:///external \"url\""],"names":["CaptureWindow","win","BrowserWindow","show","loadURL","__dirname","clippingProfile","Promise","resolve","reject","ipcMain","once","_","error","dataURL","nativeImage","createFromDataURL","webContents","send","close","createCaptureWindow","getHash","buffer","shasum","crypto","createHash","update","digest","FileManager","dir","image","toPNG","filename","path","join","fs","writeFile","readFile","encoding","data","createFileManager","PreviewWindow","width","height","fileManager","handler","handlePostTweet","bind","on","removeListener","e","args","postTweet","then","sender","url","emit","catch","message","loginManager","init","client","createClient","readAsBase64string","uploadMedia","media","updateStatuses","status","media_ids","media_id_string","user","name","id_str","EventEmitter","createPreviewWindow","TwitterClient","oauth","oauthAccessToken","oauthAccessSecret","get","JSON","parse","params","post","createTwitterClient","TwitterLoginManager","credentialPath","app","getPath","getOAuthRequestToken","requestToken","requestTokenSecret","shell","openExternal","pincodeWindow","maximizable","minimizable","resizable","pincode","getOAuthAccessToken","accessToken","accessTokenSecret","removeAllListeners","loginAndVerify","getAccessToken","saveCredentials","credentials","verify","loadCredentials","readFileSync","writeFileSync","stringify","verifyCredentials","createTwitterLoginManager","createTwitterOAuth","OAuth","captureWindow","captureAndOpenItem","capture","createdFilename","writeImage","openItem","process","platform","quit","captureAndPost","console","log","trimDesktop","displays","screen","getAllDisplays","windows","map","display","i","bounds","x","y","frame","transparent","alwaysOnTop","trimmedBounds","sourceDisplay","find","w","id","profile","forEach"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA,sG;;;;;;;;;;;ACFA;AACA;AACA;AACA,C;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wGAAwG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,cAAc,wBAAwB;AACtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAA8C;AACpE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA,iGAAiG;AACjG;;AAEA;AACA,iBAAiB,8BAA8B;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iGAAiG;AACjG;AACA;;;;;;;;;;;;ACpkBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C,0CAA0C;AACzF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gDAAgD;AAClE,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,GAAG;AACH;;AAEA;AACA;AACA,8BAA8B;AAC9B;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,sCAAsC;AACtD,kBAAkB;;AAElB;AACA;AACA;AACA;AACA,yBAAyB,8CAA8C;AACvE,yBAAyB,8CAA8C;AACvE,yBAAyB,iDAAiD;AAC1E;AACA,GAAG,qEAAqE;AACxE;AACA,GAAG,qEAAqE;AACxE;AACA,GAAG,wEAAwE;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,UAAU,WAAW,WAAW;AACvC;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS,WAAW,WAAW;AACtC;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,QAAQ;AACxC;;AAEA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AA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","file":"main/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main/index.js\");\n","exports.OAuth = require(\"./lib/oauth\").OAuth;\nexports.OAuthEcho = require(\"./lib/oauth\").OAuthEcho;\nexports.OAuth2 = require(\"./lib/oauth2\").OAuth2;","// Returns true if this is a host that closes *before* it ends?!?!\nmodule.exports.isAnEarlyCloseHost= function( hostName ) {\n  return hostName && hostName.match(\".*google(apis)?.com$\")\n}","var crypto= require('crypto'),\n    sha1= require('./sha1'),\n    http= require('http'),\n    https= require('https'),\n    URL= require('url'),\n    querystring= require('querystring'),\n    OAuthUtils= require('./_utils');\n\nexports.OAuth= function(requestUrl, accessUrl, consumerKey, consumerSecret, version, authorize_callback, signatureMethod, nonceSize, customHeaders) {\n  this._isEcho = false;\n\n  this._requestUrl= requestUrl;\n  this._accessUrl= accessUrl;\n  this._consumerKey= consumerKey;\n  this._consumerSecret= this._encodeData( consumerSecret );\n  if (signatureMethod == \"RSA-SHA1\") {\n    this._privateKey = consumerSecret;\n  }\n  this._version= version;\n  if( authorize_callback === undefined ) {\n    this._authorize_callback= \"oob\";\n  }\n  else {\n    this._authorize_callback= authorize_callback;\n  }\n\n  if( signatureMethod != \"PLAINTEXT\" && signatureMethod != \"HMAC-SHA1\" && signatureMethod != \"RSA-SHA1\")\n    throw new Error(\"Un-supported signature method: \" + signatureMethod )\n  this._signatureMethod= signatureMethod;\n  this._nonceSize= nonceSize || 32;\n  this._headers= customHeaders || {\"Accept\" : \"*/*\",\n                                   \"Connection\" : \"close\",\n                                   \"User-Agent\" : \"Node authentication\"}\n  this._clientOptions= this._defaultClientOptions= {\"requestTokenHttpMethod\": \"POST\",\n                                                    \"accessTokenHttpMethod\": \"POST\",\n                                                    \"followRedirects\": true};\n  this._oauthParameterSeperator = \",\";\n};\n\nexports.OAuthEcho= function(realm, verify_credentials, consumerKey, consumerSecret, version, signatureMethod, nonceSize, customHeaders) {\n  this._isEcho = true;\n\n  this._realm= realm;\n  this._verifyCredentials = verify_credentials;\n  this._consumerKey= consumerKey;\n  this._consumerSecret= this._encodeData( consumerSecret );\n  if (signatureMethod == \"RSA-SHA1\") {\n    this._privateKey = consumerSecret;\n  }\n  this._version= version;\n\n  if( signatureMethod != \"PLAINTEXT\" && signatureMethod != \"HMAC-SHA1\" && signatureMethod != \"RSA-SHA1\")\n    throw new Error(\"Un-supported signature method: \" + signatureMethod );\n  this._signatureMethod= signatureMethod;\n  this._nonceSize= nonceSize || 32;\n  this._headers= customHeaders || {\"Accept\" : \"*/*\",\n                                   \"Connection\" : \"close\",\n                                   \"User-Agent\" : \"Node authentication\"};\n  this._oauthParameterSeperator = \",\";\n}\n\nexports.OAuthEcho.prototype = exports.OAuth.prototype;\n\nexports.OAuth.prototype._getTimestamp= function() {\n  return Math.floor( (new Date()).getTime() / 1000 );\n}\n\nexports.OAuth.prototype._encodeData= function(toEncode){\n if( toEncode == null || toEncode == \"\" ) return \"\"\n else {\n    var result= encodeURIComponent(toEncode);\n    // Fix the mismatch between OAuth's  RFC3986's and Javascript's beliefs in what is right and wrong ;)\n    return result.replace(/\\!/g, \"%21\")\n                 .replace(/\\'/g, \"%27\")\n                 .replace(/\\(/g, \"%28\")\n                 .replace(/\\)/g, \"%29\")\n                 .replace(/\\*/g, \"%2A\");\n }\n}\n\nexports.OAuth.prototype._decodeData= function(toDecode) {\n  if( toDecode != null ) {\n    toDecode = toDecode.replace(/\\+/g, \" \");\n  }\n  return decodeURIComponent( toDecode);\n}\n\nexports.OAuth.prototype._getSignature= function(method, url, parameters, tokenSecret) {\n  var signatureBase= this._createSignatureBase(method, url, parameters);\n  return this._createSignature( signatureBase, tokenSecret );\n}\n\nexports.OAuth.prototype._normalizeUrl= function(url) {\n  var parsedUrl= URL.parse(url, true)\n   var port =\"\";\n   if( parsedUrl.port ) {\n     if( (parsedUrl.protocol == \"http:\" && parsedUrl.port != \"80\" ) ||\n         (parsedUrl.protocol == \"https:\" && parsedUrl.port != \"443\") ) {\n           port= \":\" + parsedUrl.port;\n         }\n   }\n\n  if( !parsedUrl.pathname  || parsedUrl.pathname == \"\" ) parsedUrl.pathname =\"/\";\n\n  return parsedUrl.protocol + \"//\" + parsedUrl.hostname + port + parsedUrl.pathname;\n}\n\n// Is the parameter considered an OAuth parameter\nexports.OAuth.prototype._isParameterNameAnOAuthParameter= function(parameter) {\n  var m = parameter.match('^oauth_');\n  if( m && ( m[0] === \"oauth_\" ) ) {\n    return true;\n  }\n  else {\n    return false;\n  }\n};\n\n// build the OAuth request authorization header\nexports.OAuth.prototype._buildAuthorizationHeaders= function(orderedParameters) {\n  var authHeader=\"OAuth \";\n  if( this._isEcho ) {\n    authHeader += 'realm=\"' + this._realm + '\",';\n  }\n\n  for( var i= 0 ; i < orderedParameters.length; i++) {\n     // Whilst the all the parameters should be included within the signature, only the oauth_ arguments\n     // should appear within the authorization header.\n     if( this._isParameterNameAnOAuthParameter(orderedParameters[i][0]) ) {\n      authHeader+= \"\" + this._encodeData(orderedParameters[i][0])+\"=\\\"\"+ this._encodeData(orderedParameters[i][1])+\"\\\"\"+ this._oauthParameterSeperator;\n     }\n  }\n\n  authHeader= authHeader.substring(0, authHeader.length-this._oauthParameterSeperator.length);\n  return authHeader;\n}\n\n// Takes an object literal that represents the arguments, and returns an array\n// of argument/value pairs.\nexports.OAuth.prototype._makeArrayOfArgumentsHash= function(argumentsHash) {\n  var argument_pairs= [];\n  for(var key in argumentsHash ) {\n    if (argumentsHash.hasOwnProperty(key)) {\n       var value= argumentsHash[key];\n       if( Array.isArray(value) ) {\n         for(var i=0;i<value.length;i++) {\n           argument_pairs[argument_pairs.length]= [key, value[i]];\n         }\n       }\n       else {\n         argument_pairs[argument_pairs.length]= [key, value];\n       }\n    }\n  }\n  return argument_pairs;\n}\n\n// Sorts the encoded key value pairs by encoded name, then encoded value\nexports.OAuth.prototype._sortRequestParams= function(argument_pairs) {\n  // Sort by name, then value.\n  argument_pairs.sort(function(a,b) {\n      if ( a[0]== b[0] )  {\n        return a[1] < b[1] ? -1 : 1;\n      }\n      else return a[0] < b[0] ? -1 : 1;\n  });\n\n  return argument_pairs;\n}\n\nexports.OAuth.prototype._normaliseRequestParams= function(args) {\n  var argument_pairs= this._makeArrayOfArgumentsHash(args);\n  // First encode them #3.4.1.3.2 .1\n  for(var i=0;i<argument_pairs.length;i++) {\n    argument_pairs[i][0]= this._encodeData( argument_pairs[i][0] );\n    argument_pairs[i][1]= this._encodeData( argument_pairs[i][1] );\n  }\n\n  // Then sort them #3.4.1.3.2 .2\n  argument_pairs= this._sortRequestParams( argument_pairs );\n\n  // Then concatenate together #3.4.1.3.2 .3 & .4\n  var args= \"\";\n  for(var i=0;i<argument_pairs.length;i++) {\n      args+= argument_pairs[i][0];\n      args+= \"=\"\n      args+= argument_pairs[i][1];\n      if( i < argument_pairs.length-1 ) args+= \"&\";\n  }\n  return args;\n}\n\nexports.OAuth.prototype._createSignatureBase= function(method, url, parameters) {\n  url= this._encodeData( this._normalizeUrl(url) );\n  parameters= this._encodeData( parameters );\n  return method.toUpperCase() + \"&\" + url + \"&\" + parameters;\n}\n\nexports.OAuth.prototype._createSignature= function(signatureBase, tokenSecret) {\n   if( tokenSecret === undefined ) var tokenSecret= \"\";\n   else tokenSecret= this._encodeData( tokenSecret );\n   // consumerSecret is already encoded\n   var key= this._consumerSecret + \"&\" + tokenSecret;\n\n   var hash= \"\"\n   if( this._signatureMethod == \"PLAINTEXT\" ) {\n     hash= key;\n   }\n   else if (this._signatureMethod == \"RSA-SHA1\") {\n     key = this._privateKey || \"\";\n     hash= crypto.createSign(\"RSA-SHA1\").update(signatureBase).sign(key, 'base64');\n   }\n   else {\n       if( crypto.Hmac ) {\n         hash = crypto.createHmac(\"sha1\", key).update(signatureBase).digest(\"base64\");\n       }\n       else {\n         hash= sha1.HMACSHA1(key, signatureBase);\n       }\n   }\n   return hash;\n}\nexports.OAuth.prototype.NONCE_CHARS= ['a','b','c','d','e','f','g','h','i','j','k','l','m','n',\n              'o','p','q','r','s','t','u','v','w','x','y','z','A','B',\n              'C','D','E','F','G','H','I','J','K','L','M','N','O','P',\n              'Q','R','S','T','U','V','W','X','Y','Z','0','1','2','3',\n              '4','5','6','7','8','9'];\n\nexports.OAuth.prototype._getNonce= function(nonceSize) {\n   var result = [];\n   var chars= this.NONCE_CHARS;\n   var char_pos;\n   var nonce_chars_length= chars.length;\n\n   for (var i = 0; i < nonceSize; i++) {\n       char_pos= Math.floor(Math.random() * nonce_chars_length);\n       result[i]=  chars[char_pos];\n   }\n   return result.join('');\n}\n\nexports.OAuth.prototype._createClient= function( port, hostname, method, path, headers, sslEnabled ) {\n  var options = {\n    host: hostname,\n    port: port,\n    path: path,\n    method: method,\n    headers: headers\n  };\n  var httpModel;\n  if( sslEnabled ) {\n    httpModel= https;\n  } else {\n    httpModel= http;\n  }\n  return httpModel.request(options);\n}\n\nexports.OAuth.prototype._prepareParameters= function( oauth_token, oauth_token_secret, method, url, extra_params ) {\n  var oauthParameters= {\n      \"oauth_timestamp\":        this._getTimestamp(),\n      \"oauth_nonce\":            this._getNonce(this._nonceSize),\n      \"oauth_version\":          this._version,\n      \"oauth_signature_method\": this._signatureMethod,\n      \"oauth_consumer_key\":     this._consumerKey\n  };\n\n  if( oauth_token ) {\n    oauthParameters[\"oauth_token\"]= oauth_token;\n  }\n\n  var sig;\n  if( this._isEcho ) {\n    sig = this._getSignature( \"GET\",  this._verifyCredentials,  this._normaliseRequestParams(oauthParameters), oauth_token_secret);\n  }\n  else {\n    if( extra_params ) {\n      for( var key in extra_params ) {\n        if (extra_params.hasOwnProperty(key)) oauthParameters[key]= extra_params[key];\n      }\n    }\n    var parsedUrl= URL.parse( url, false );\n\n    if( parsedUrl.query ) {\n      var key2;\n      var extraParameters= querystring.parse(parsedUrl.query);\n      for(var key in extraParameters ) {\n        var value= extraParameters[key];\n          if( typeof value == \"object\" ){\n            // TODO: This probably should be recursive\n            for(key2 in value){\n              oauthParameters[key + \"[\" + key2 + \"]\"] = value[key2];\n            }\n          } else {\n            oauthParameters[key]= value;\n          }\n        }\n    }\n\n    sig = this._getSignature( method,  url,  this._normaliseRequestParams(oauthParameters), oauth_token_secret);\n  }\n\n  var orderedParameters= this._sortRequestParams( this._makeArrayOfArgumentsHash(oauthParameters) );\n  orderedParameters[orderedParameters.length]= [\"oauth_signature\", sig];\n  return orderedParameters;\n}\n\nexports.OAuth.prototype._performSecureRequest= function( oauth_token, oauth_token_secret, method, url, extra_params, post_body, post_content_type,  callback ) {\n  var orderedParameters= this._prepareParameters(oauth_token, oauth_token_secret, method, url, extra_params);\n\n  if( !post_content_type ) {\n    post_content_type= \"application/x-www-form-urlencoded\";\n  }\n  var parsedUrl= URL.parse( url, false );\n  if( parsedUrl.protocol == \"http:\" && !parsedUrl.port ) parsedUrl.port= 80;\n  if( parsedUrl.protocol == \"https:\" && !parsedUrl.port ) parsedUrl.port= 443;\n\n  var headers= {};\n  var authorization = this._buildAuthorizationHeaders(orderedParameters);\n  if ( this._isEcho ) {\n    headers[\"X-Verify-Credentials-Authorization\"]= authorization;\n  }\n  else {\n    headers[\"Authorization\"]= authorization;\n  }\n\n  headers[\"Host\"] = parsedUrl.host\n\n  for( var key in this._headers ) {\n    if (this._headers.hasOwnProperty(key)) {\n      headers[key]= this._headers[key];\n    }\n  }\n\n  // Filter out any passed extra_params that are really to do with OAuth\n  for(var key in extra_params) {\n    if( this._isParameterNameAnOAuthParameter( key ) ) {\n      delete extra_params[key];\n    }\n  }\n\n  if( (method == \"POST\" || method == \"PUT\")  && ( post_body == null && extra_params != null) ) {\n    // Fix the mismatch between the output of querystring.stringify() and this._encodeData()\n    post_body= querystring.stringify(extra_params)\n                       .replace(/\\!/g, \"%21\")\n                       .replace(/\\'/g, \"%27\")\n                       .replace(/\\(/g, \"%28\")\n                       .replace(/\\)/g, \"%29\")\n                       .replace(/\\*/g, \"%2A\");\n  }\n\n  if( post_body ) {\n      if ( Buffer.isBuffer(post_body) ) {\n          headers[\"Content-length\"]= post_body.length;\n      } else {\n          headers[\"Content-length\"]= Buffer.byteLength(post_body);\n      }\n  } else {\n      headers[\"Content-length\"]= 0;\n  }\n\n  headers[\"Content-Type\"]= post_content_type;\n\n  var path;\n  if( !parsedUrl.pathname  || parsedUrl.pathname == \"\" ) parsedUrl.pathname =\"/\";\n  if( parsedUrl.query ) path= parsedUrl.pathname + \"?\"+ parsedUrl.query ;\n  else path= parsedUrl.pathname;\n\n  var request;\n  if( parsedUrl.protocol == \"https:\" ) {\n    request= this._createClient(parsedUrl.port, parsedUrl.hostname, method, path, headers, true);\n  }\n  else {\n    request= this._createClient(parsedUrl.port, parsedUrl.hostname, method, path, headers);\n  }\n\n  var clientOptions = this._clientOptions;\n  if( callback ) {\n    var data=\"\";\n    var self= this;\n\n    // Some hosts *cough* google appear to close the connection early / send no content-length header\n    // allow this behaviour.\n    var allowEarlyClose= OAuthUtils.isAnEarlyCloseHost( parsedUrl.hostname );\n    var callbackCalled= false;\n    var passBackControl = function( response ) {\n      if(!callbackCalled) {\n        callbackCalled= true;\n        if ( response.statusCode >= 200 && response.statusCode <= 299 ) {\n          callback(null, data, response);\n        } else {\n          // Follow 301 or 302 redirects with Location HTTP header\n          if((response.statusCode == 301 || response.statusCode == 302) && clientOptions.followRedirects && response.headers && response.headers.location) {\n            self._performSecureRequest( oauth_token, oauth_token_secret, method, response.headers.location, extra_params, post_body, post_content_type,  callback);\n          }\n          else {\n            callback({ statusCode: response.statusCode, data: data }, data, response);\n          }\n        }\n      }\n    }\n\n    request.on('response', function (response) {\n      response.setEncoding('utf8');\n      response.on('data', function (chunk) {\n        data+=chunk;\n      });\n      response.on('end', function () {\n        passBackControl( response );\n      });\n      response.on('close', function () {\n        if( allowEarlyClose ) {\n          passBackControl( response );\n        }\n      });\n    });\n\n    request.on(\"error\", function(err) {\n      if(!callbackCalled) {\n        callbackCalled= true;\n        callback( err )\n      }\n    });\n\n    if( (method == \"POST\" || method ==\"PUT\") && post_body != null && post_body != \"\" ) {\n      request.write(post_body);\n    }\n    request.end();\n  }\n  else {\n    if( (method == \"POST\" || method ==\"PUT\") && post_body != null && post_body != \"\" ) {\n      request.write(post_body);\n    }\n    return request;\n  }\n\n  return;\n}\n\nexports.OAuth.prototype.setClientOptions= function(options) {\n  var key,\n      mergedOptions= {},\n      hasOwnProperty= Object.prototype.hasOwnProperty;\n\n  for( key in this._defaultClientOptions ) {\n    if( !hasOwnProperty.call(options, key) ) {\n      mergedOptions[key]= this._defaultClientOptions[key];\n    } else {\n      mergedOptions[key]= options[key];\n    }\n  }\n\n  this._clientOptions= mergedOptions;\n};\n\nexports.OAuth.prototype.getOAuthAccessToken= function(oauth_token, oauth_token_secret, oauth_verifier,  callback) {\n  var extraParams= {};\n  if( typeof oauth_verifier == \"function\" ) {\n    callback= oauth_verifier;\n  } else {\n    extraParams.oauth_verifier= oauth_verifier;\n  }\n\n   this._performSecureRequest( oauth_token, oauth_token_secret, this._clientOptions.accessTokenHttpMethod, this._accessUrl, extraParams, null, null, function(error, data, response) {\n         if( error ) callback(error);\n         else {\n           var results= querystring.parse( data );\n           var oauth_access_token= results[\"oauth_token\"];\n           delete results[\"oauth_token\"];\n           var oauth_access_token_secret= results[\"oauth_token_secret\"];\n           delete results[\"oauth_token_secret\"];\n           callback(null, oauth_access_token, oauth_access_token_secret, results );\n         }\n   })\n}\n\n// Deprecated\nexports.OAuth.prototype.getProtectedResource= function(url, method, oauth_token, oauth_token_secret, callback) {\n  this._performSecureRequest( oauth_token, oauth_token_secret, method, url, null, \"\", null, callback );\n}\n\nexports.OAuth.prototype.delete= function(url, oauth_token, oauth_token_secret, callback) {\n  return this._performSecureRequest( oauth_token, oauth_token_secret, \"DELETE\", url, null, \"\", null, callback );\n}\n\nexports.OAuth.prototype.get= function(url, oauth_token, oauth_token_secret, callback) {\n  return this._performSecureRequest( oauth_token, oauth_token_secret, \"GET\", url, null, \"\", null, callback );\n}\n\nexports.OAuth.prototype._putOrPost= function(method, url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  var extra_params= null;\n  if( typeof post_content_type == \"function\" ) {\n    callback= post_content_type;\n    post_content_type= null;\n  }\n  if ( typeof post_body != \"string\" && !Buffer.isBuffer(post_body) ) {\n    post_content_type= \"application/x-www-form-urlencoded\"\n    extra_params= post_body;\n    post_body= null;\n  }\n  return this._performSecureRequest( oauth_token, oauth_token_secret, method, url, extra_params, post_body, post_content_type, callback );\n}\n\n\nexports.OAuth.prototype.put= function(url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  return this._putOrPost(\"PUT\", url, oauth_token, oauth_token_secret, post_body, post_content_type, callback);\n}\n\nexports.OAuth.prototype.post= function(url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  return this._putOrPost(\"POST\", url, oauth_token, oauth_token_secret, post_body, post_content_type, callback);\n}\n\n/**\n * Gets a request token from the OAuth provider and passes that information back\n * to the calling code.\n *\n * The callback should expect a function of the following form:\n *\n * function(err, token, token_secret, parsedQueryString) {}\n *\n * This method has optional parameters so can be called in the following 2 ways:\n *\n * 1) Primary use case: Does a basic request with no extra parameters\n *  getOAuthRequestToken( callbackFunction )\n *\n * 2) As above but allows for provision of extra parameters to be sent as part of the query to the server.\n *  getOAuthRequestToken( extraParams, callbackFunction )\n *\n * N.B. This method will HTTP POST verbs by default, if you wish to override this behaviour you will\n * need to provide a requestTokenHttpMethod option when creating the client.\n *\n **/\nexports.OAuth.prototype.getOAuthRequestToken= function( extraParams, callback ) {\n   if( typeof extraParams == \"function\" ){\n     callback = extraParams;\n     extraParams = {};\n   }\n  // Callbacks are 1.0A related\n  if( this._authorize_callback ) {\n    extraParams[\"oauth_callback\"]= this._authorize_callback;\n  }\n  this._performSecureRequest( null, null, this._clientOptions.requestTokenHttpMethod, this._requestUrl, extraParams, null, null, function(error, data, response) {\n    if( error ) callback(error);\n    else {\n      var results= querystring.parse(data);\n\n      var oauth_token= results[\"oauth_token\"];\n      var oauth_token_secret= results[\"oauth_token_secret\"];\n      delete results[\"oauth_token\"];\n      delete results[\"oauth_token_secret\"];\n      callback(null, oauth_token, oauth_token_secret,  results );\n    }\n  });\n}\n\nexports.OAuth.prototype.signUrl= function(url, oauth_token, oauth_token_secret, method) {\n\n  if( method === undefined ) {\n    var method= \"GET\";\n  }\n\n  var orderedParameters= this._prepareParameters(oauth_token, oauth_token_secret, method, url, {});\n  var parsedUrl= URL.parse( url, false );\n\n  var query=\"\";\n  for( var i= 0 ; i < orderedParameters.length; i++) {\n    query+= orderedParameters[i][0]+\"=\"+ this._encodeData(orderedParameters[i][1]) + \"&\";\n  }\n  query= query.substring(0, query.length-1);\n\n  return parsedUrl.protocol + \"//\"+ parsedUrl.host + parsedUrl.pathname + \"?\" + query;\n};\n\nexports.OAuth.prototype.authHeader= function(url, oauth_token, oauth_token_secret, method) {\n  if( method === undefined ) {\n    var method= \"GET\";\n  }\n\n  var orderedParameters= this._prepareParameters(oauth_token, oauth_token_secret, method, url, {});\n  return this._buildAuthorizationHeaders(orderedParameters);\n};\n","var querystring= require('querystring'),\n    crypto= require('crypto'),\n    https= require('https'),\n    http= require('http'),\n    URL= require('url'),\n    OAuthUtils= require('./_utils');\n\nexports.OAuth2= function(clientId, clientSecret, baseSite, authorizePath, accessTokenPath, customHeaders) {\n  this._clientId= clientId;\n  this._clientSecret= clientSecret;\n  this._baseSite= baseSite;\n  this._authorizeUrl= authorizePath || \"/oauth/authorize\";\n  this._accessTokenUrl= accessTokenPath || \"/oauth/access_token\";\n  this._accessTokenName= \"access_token\";\n  this._authMethod= \"Bearer\";\n  this._customHeaders = customHeaders || {};\n  this._useAuthorizationHeaderForGET= false;\n\n  //our agent\n  this._agent = undefined;\n};\n\n// Allows you to set an agent to use instead of the default HTTP or\n// HTTPS agents. Useful when dealing with your own certificates.\nexports.OAuth2.prototype.setAgent = function(agent) {\n  this._agent = agent;\n};\n\n// This 'hack' method is required for sites that don't use\n// 'access_token' as the name of the access token (for requests).\n// ( http://tools.ietf.org/html/draft-ietf-oauth-v2-16#section-7 )\n// it isn't clear what the correct value should be atm, so allowing\n// for specific (temporary?) override for now.\nexports.OAuth2.prototype.setAccessTokenName= function ( name ) {\n  this._accessTokenName= name;\n}\n\n// Sets the authorization method for Authorization header.\n// e.g. Authorization: Bearer <token>  # \"Bearer\" is the authorization method.\nexports.OAuth2.prototype.setAuthMethod = function ( authMethod ) {\n  this._authMethod = authMethod;\n};\n\n\n// If you use the OAuth2 exposed 'get' method (and don't construct your own _request call )\n// this will specify whether to use an 'Authorize' header instead of passing the access_token as a query parameter\nexports.OAuth2.prototype.useAuthorizationHeaderforGET = function(useIt) {\n  this._useAuthorizationHeaderForGET= useIt;\n}\n\nexports.OAuth2.prototype._getAccessTokenUrl= function() {\n  return this._baseSite + this._accessTokenUrl; /* + \"?\" + querystring.stringify(params); */\n}\n\n// Build the authorization header. In particular, build the part after the colon.\n// e.g. Authorization: Bearer <token>  # Build \"Bearer <token>\"\nexports.OAuth2.prototype.buildAuthHeader= function(token) {\n  return this._authMethod + ' ' + token;\n};\n\nexports.OAuth2.prototype._chooseHttpLibrary= function( parsedUrl ) {\n  var http_library= https;\n  // As this is OAUth2, we *assume* https unless told explicitly otherwise.\n  if( parsedUrl.protocol != \"https:\" ) {\n    http_library= http;\n  }\n  return http_library;\n};\n\nexports.OAuth2.prototype._request= function(method, url, headers, post_body, access_token, callback) {\n\n  var parsedUrl= URL.parse( url, true );\n  if( parsedUrl.protocol == \"https:\" && !parsedUrl.port ) {\n    parsedUrl.port= 443;\n  }\n\n  var http_library= this._chooseHttpLibrary( parsedUrl );\n\n\n  var realHeaders= {};\n  for( var key in this._customHeaders ) {\n    realHeaders[key]= this._customHeaders[key];\n  }\n  if( headers ) {\n    for(var key in headers) {\n      realHeaders[key] = headers[key];\n    }\n  }\n  realHeaders['Host']= parsedUrl.host;\n\n  if (!realHeaders['User-Agent']) {\n    realHeaders['User-Agent'] = 'Node-oauth';\n  }\n\n  if( post_body ) {\n      if ( Buffer.isBuffer(post_body) ) {\n          realHeaders[\"Content-Length\"]= post_body.length;\n      } else {\n          realHeaders[\"Content-Length\"]= Buffer.byteLength(post_body);\n      }\n  } else {\n      realHeaders[\"Content-length\"]= 0;\n  }\n\n  if( access_token && !('Authorization' in realHeaders)) {\n    if( ! parsedUrl.query ) parsedUrl.query= {};\n    parsedUrl.query[this._accessTokenName]= access_token;\n  }\n\n  var queryStr= querystring.stringify(parsedUrl.query);\n  if( queryStr ) queryStr=  \"?\" + queryStr;\n  var options = {\n    host:parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.pathname + queryStr,\n    method: method,\n    headers: realHeaders\n  };\n\n  this._executeRequest( http_library, options, post_body, callback );\n}\n\nexports.OAuth2.prototype._executeRequest= function( http_library, options, post_body, callback ) {\n  // Some hosts *cough* google appear to close the connection early / send no content-length header\n  // allow this behaviour.\n  var allowEarlyClose= OAuthUtils.isAnEarlyCloseHost(options.host);\n  var callbackCalled= false;\n  function passBackControl( response, result ) {\n    if(!callbackCalled) {\n      callbackCalled=true;\n      if( !(response.statusCode >= 200 && response.statusCode <= 299) && (response.statusCode != 301) && (response.statusCode != 302) ) {\n        callback({ statusCode: response.statusCode, data: result });\n      } else {\n        callback(null, result, response);\n      }\n    }\n  }\n\n  var result= \"\";\n\n  //set the agent on the request options\n  if (this._agent) {\n    options.agent = this._agent;\n  }\n\n  var request = http_library.request(options);\n  request.on('response', function (response) {\n    response.on(\"data\", function (chunk) {\n      result+= chunk\n    });\n    response.on(\"close\", function (err) {\n      if( allowEarlyClose ) {\n        passBackControl( response, result );\n      }\n    });\n    response.addListener(\"end\", function () {\n      passBackControl( response, result );\n    });\n  });\n  request.on('error', function(e) {\n    callbackCalled= true;\n    callback(e);\n  });\n\n  if( (options.method == 'POST' || options.method == 'PUT') && post_body ) {\n     request.write(post_body);\n  }\n  request.end();\n}\n\nexports.OAuth2.prototype.getAuthorizeUrl= function( params ) {\n  var params= params || {};\n  params['client_id'] = this._clientId;\n  return this._baseSite + this._authorizeUrl + \"?\" + querystring.stringify(params);\n}\n\nexports.OAuth2.prototype.getOAuthAccessToken= function(code, params, callback) {\n  var params= params || {};\n  params['client_id'] = this._clientId;\n  params['client_secret'] = this._clientSecret;\n  var codeParam = (params.grant_type === 'refresh_token') ? 'refresh_token' : 'code';\n  params[codeParam]= code;\n\n  var post_data= querystring.stringify( params );\n  var post_headers= {\n       'Content-Type': 'application/x-www-form-urlencoded'\n   };\n\n\n  this._request(\"POST\", this._getAccessTokenUrl(), post_headers, post_data, null, function(error, data, response) {\n    if( error )  callback(error);\n    else {\n      var results;\n      try {\n        // As of http://tools.ietf.org/html/draft-ietf-oauth-v2-07\n        // responses should be in JSON\n        results= JSON.parse( data );\n      }\n      catch(e) {\n        // .... However both Facebook + Github currently use rev05 of the spec\n        // and neither seem to specify a content-type correctly in their response headers :(\n        // clients of these services will suffer a *minor* performance cost of the exception\n        // being thrown\n        results= querystring.parse( data );\n      }\n      var access_token= results[\"access_token\"];\n      var refresh_token= results[\"refresh_token\"];\n      delete results[\"refresh_token\"];\n      callback(null, access_token, refresh_token, results); // callback results =-=\n    }\n  });\n}\n\n// Deprecated\nexports.OAuth2.prototype.getProtectedResource= function(url, access_token, callback) {\n  this._request(\"GET\", url, {}, \"\", access_token, callback );\n}\n\nexports.OAuth2.prototype.get= function(url, access_token, callback) {\n  if( this._useAuthorizationHeaderForGET ) {\n    var headers= {'Authorization': this.buildAuthHeader(access_token) }\n    access_token= null;\n  }\n  else {\n    headers= {};\n  }\n  this._request(\"GET\", url, headers, \"\", access_token, callback );\n}\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS 180-1\n * Version 2.2 Copyright Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\n/*\n * Configurable variables. You may need to tweak these to be compatible with\n * the server-side, but the defaults work in most cases.\n */\nvar hexcase = 1;  /* hex output format. 0 - lowercase; 1 - uppercase        */\nvar b64pad  = \"=\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\n\n/*\n * These are the functions you'll usually want to call\n * They take string arguments and return either hex or base-64 encoded strings\n */\nfunction hex_sha1(s)    { return rstr2hex(rstr_sha1(str2rstr_utf8(s))); }\nfunction b64_sha1(s)    { return rstr2b64(rstr_sha1(str2rstr_utf8(s))); }\nfunction any_sha1(s, e) { return rstr2any(rstr_sha1(str2rstr_utf8(s)), e); }\nfunction hex_hmac_sha1(k, d)\n  { return rstr2hex(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d))); }\nfunction b64_hmac_sha1(k, d)\n  { return rstr2b64(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d))); }\nfunction any_hmac_sha1(k, d, e)\n  { return rstr2any(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d)), e); }\n\n/*\n * Perform a simple self-test to see if the VM is working\n */\nfunction sha1_vm_test()\n{\n  return hex_sha1(\"abc\").toLowerCase() == \"a9993e364706816aba3e25717850c26c9cd0d89d\";\n}\n\n/*\n * Calculate the SHA1 of a raw string\n */\nfunction rstr_sha1(s)\n{\n  return binb2rstr(binb_sha1(rstr2binb(s), s.length * 8));\n}\n\n/*\n * Calculate the HMAC-SHA1 of a key and some data (raw strings)\n */\nfunction rstr_hmac_sha1(key, data)\n{\n  var bkey = rstr2binb(key);\n  if(bkey.length > 16) bkey = binb_sha1(bkey, key.length * 8);\n\n  var ipad = Array(16), opad = Array(16);\n  for(var i = 0; i < 16; i++)\n  {\n    ipad[i] = bkey[i] ^ 0x36363636;\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n  }\n\n  var hash = binb_sha1(ipad.concat(rstr2binb(data)), 512 + data.length * 8);\n  return binb2rstr(binb_sha1(opad.concat(hash), 512 + 160));\n}\n\n/*\n * Convert a raw string to a hex string\n */\nfunction rstr2hex(input)\n{\n  try { hexcase } catch(e) { hexcase=0; }\n  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n  var output = \"\";\n  var x;\n  for(var i = 0; i < input.length; i++)\n  {\n    x = input.charCodeAt(i);\n    output += hex_tab.charAt((x >>> 4) & 0x0F)\n           +  hex_tab.charAt( x        & 0x0F);\n  }\n  return output;\n}\n\n/*\n * Convert a raw string to a base-64 string\n */\nfunction rstr2b64(input)\n{\n  try { b64pad } catch(e) { b64pad=''; }\n  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  var output = \"\";\n  var len = input.length;\n  for(var i = 0; i < len; i += 3)\n  {\n    var triplet = (input.charCodeAt(i) << 16)\n                | (i + 1 < len ? input.charCodeAt(i+1) << 8 : 0)\n                | (i + 2 < len ? input.charCodeAt(i+2)      : 0);\n    for(var j = 0; j < 4; j++)\n    {\n      if(i * 8 + j * 6 > input.length * 8) output += b64pad;\n      else output += tab.charAt((triplet >>> 6*(3-j)) & 0x3F);\n    }\n  }\n  return output;\n}\n\n/*\n * Convert a raw string to an arbitrary string encoding\n */\nfunction rstr2any(input, encoding)\n{\n  var divisor = encoding.length;\n  var remainders = Array();\n  var i, q, x, quotient;\n\n  /* Convert to an array of 16-bit big-endian values, forming the dividend */\n  var dividend = Array(Math.ceil(input.length / 2));\n  for(i = 0; i < dividend.length; i++)\n  {\n    dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\n  }\n\n  /*\n   * Repeatedly perform a long division. The binary array forms the dividend,\n   * the length of the encoding is the divisor. Once computed, the quotient\n   * forms the dividend for the next step. We stop when the dividend is zero.\n   * All remainders are stored for later use.\n   */\n  while(dividend.length > 0)\n  {\n    quotient = Array();\n    x = 0;\n    for(i = 0; i < dividend.length; i++)\n    {\n      x = (x << 16) + dividend[i];\n      q = Math.floor(x / divisor);\n      x -= q * divisor;\n      if(quotient.length > 0 || q > 0)\n        quotient[quotient.length] = q;\n    }\n    remainders[remainders.length] = x;\n    dividend = quotient;\n  }\n\n  /* Convert the remainders to the output string */\n  var output = \"\";\n  for(i = remainders.length - 1; i >= 0; i--)\n    output += encoding.charAt(remainders[i]);\n\n  /* Append leading zero equivalents */\n  var full_length = Math.ceil(input.length * 8 /\n                                    (Math.log(encoding.length) / Math.log(2)))\n  for(i = output.length; i < full_length; i++)\n    output = encoding[0] + output;\n\n  return output;\n}\n\n/*\n * Encode a string as utf-8.\n * For efficiency, this assumes the input is valid utf-16.\n */\nfunction str2rstr_utf8(input)\n{\n  var output = \"\";\n  var i = -1;\n  var x, y;\n\n  while(++i < input.length)\n  {\n    /* Decode utf-16 surrogate pairs */\n    x = input.charCodeAt(i);\n    y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\n    if(0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF)\n    {\n      x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n      i++;\n    }\n\n    /* Encode output as utf-8 */\n    if(x <= 0x7F)\n      output += String.fromCharCode(x);\n    else if(x <= 0x7FF)\n      output += String.fromCharCode(0xC0 | ((x >>> 6 ) & 0x1F),\n                                    0x80 | ( x         & 0x3F));\n    else if(x <= 0xFFFF)\n      output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\n                                    0x80 | ((x >>> 6 ) & 0x3F),\n                                    0x80 | ( x         & 0x3F));\n    else if(x <= 0x1FFFFF)\n      output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\n                                    0x80 | ((x >>> 12) & 0x3F),\n                                    0x80 | ((x >>> 6 ) & 0x3F),\n                                    0x80 | ( x         & 0x3F));\n  }\n  return output;\n}\n\n/*\n * Encode a string as utf-16\n */\nfunction str2rstr_utf16le(input)\n{\n  var output = \"\";\n  for(var i = 0; i < input.length; i++)\n    output += String.fromCharCode( input.charCodeAt(i)        & 0xFF,\n                                  (input.charCodeAt(i) >>> 8) & 0xFF);\n  return output;\n}\n\nfunction str2rstr_utf16be(input)\n{\n  var output = \"\";\n  for(var i = 0; i < input.length; i++)\n    output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,\n                                   input.charCodeAt(i)        & 0xFF);\n  return output;\n}\n\n/*\n * Convert a raw string to an array of big-endian words\n * Characters >255 have their high-byte silently ignored.\n */\nfunction rstr2binb(input)\n{\n  var output = Array(input.length >> 2);\n  for(var i = 0; i < output.length; i++)\n    output[i] = 0;\n  for(var i = 0; i < input.length * 8; i += 8)\n    output[i>>5] |= (input.charCodeAt(i / 8) & 0xFF) << (24 - i % 32);\n  return output;\n}\n\n/*\n * Convert an array of big-endian words to a string\n */\nfunction binb2rstr(input)\n{\n  var output = \"\";\n  for(var i = 0; i < input.length * 32; i += 8)\n    output += String.fromCharCode((input[i>>5] >>> (24 - i % 32)) & 0xFF);\n  return output;\n}\n\n/*\n * Calculate the SHA-1 of an array of big-endian words, and a bit length\n */\nfunction binb_sha1(x, len)\n{\n  /* append padding */\n  x[len >> 5] |= 0x80 << (24 - len % 32);\n  x[((len + 64 >> 9) << 4) + 15] = len;\n\n  var w = Array(80);\n  var a =  1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d =  271733878;\n  var e = -1009589776;\n\n  for(var i = 0; i < x.length; i += 16)\n  {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    var olde = e;\n\n    for(var j = 0; j < 80; j++)\n    {\n      if(j < 16) w[j] = x[i + j];\n      else w[j] = bit_rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);\n      var t = safe_add(safe_add(bit_rol(a, 5), sha1_ft(j, b, c, d)),\n                       safe_add(safe_add(e, w[j]), sha1_kt(j)));\n      e = d;\n      d = c;\n      c = bit_rol(b, 30);\n      b = a;\n      a = t;\n    }\n\n    a = safe_add(a, olda);\n    b = safe_add(b, oldb);\n    c = safe_add(c, oldc);\n    d = safe_add(d, oldd);\n    e = safe_add(e, olde);\n  }\n  return Array(a, b, c, d, e);\n\n}\n\n/*\n * Perform the appropriate triplet combination function for the current\n * iteration\n */\nfunction sha1_ft(t, b, c, d)\n{\n  if(t < 20) return (b & c) | ((~b) & d);\n  if(t < 40) return b ^ c ^ d;\n  if(t < 60) return (b & c) | (b & d) | (c & d);\n  return b ^ c ^ d;\n}\n\n/*\n * Determine the appropriate additive constant for the current iteration\n */\nfunction sha1_kt(t)\n{\n  return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :\n         (t < 60) ? -1894007588 : -899497514;\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safe_add(x, y)\n{\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xFFFF);\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction bit_rol(num, cnt)\n{\n  return (num << cnt) | (num >>> (32 - cnt));\n}\n\nexports.HMACSHA1= function(key, data) {\n  return b64_hmac_sha1(key, data);\n}","import { ipcMain, BrowserWindow, nativeImage } from \"electron\";\n\nclass CaptureWindow {\n  constructor() {\n    this.win = new BrowserWindow({ show: false });\n    this.win.loadURL(`file://${__dirname}/../../captureWindow.html`);\n  }\n\n  capture(clippingProfile) {\n    return new Promise((resolve, reject) => {\n      ipcMain.once(\"REPLY_CAPTURE\", (_, { error, dataURL }) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(nativeImage.createFromDataURL(dataURL));\n        }\n      });\n      this.win.webContents.send(\"CAPTURE\", clippingProfile);\n    });\n  }\n\n  close() {\n    this.win.close();\n  }\n}\n\nfunction createCaptureWindow() {\n  return new CaptureWindow();\n}\n\nexport default createCaptureWindow;\n","import path from \"path\";\nimport fs from \"fs\";\nimport crypto from \"crypto\";\n\nfunction getHash(buffer) {\n  const shasum = crypto.createHash(\"sha1\");\n  shasum.update(buffer);\n  return shasum.digest(\"hex\");\n}\n\nclass FileManager {\n  writeImage(dir, image) {\n    return new Promise((resolve, reject) => {\n      const buffer = image.toPNG();\n      const filename = path.join(dir, `${getHash(buffer)}.png`);\n      fs.writeFile(filename, buffer, error => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(filename);\n        }\n      });\n    });\n  }\n\n  readAsBase64string(filename) {\n    return new Promise((resolve, reject) => {\n      fs.readFile(filename, { encoding: \"base64\" }, (error, data) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  }\n}\n\nfunction createFileManager() {\n  return new FileManager();\n}\n\nexport default createFileManager;\n","import { BrowserWindow, ipcMain } from \"electron\";\nimport { EventEmitter } from \"events\";\nimport createFileManager from \"./createFileManager\";\nimport createTwitterLoginManager from \"./createTwitterLoginManager\";\n\nclass PreviewWindow extends EventEmitter {\n  constructor({ filename }) {\n    super();\n    this.win = new BrowserWindow({\n      width: 500,\n      height: 430\n    });\n    this.fileManager = createFileManager();\n    this.filename = filename;\n    this.win.loadURL(\n      `file://${__dirname}/../../previewWindow.html?filename=${filename}`\n    );\n    const handler = this.handlePostTweet.bind(this);\n    ipcMain.on(\"POST_TWEET\", handler);\n    this.win.on(\"close\", () => {\n      ipcMain.removeListener(\"POST_TWEET\", handler);\n    });\n  }\n\n  handlePostTweet(e, args) {\n    this.postTweet(args)\n      .then(url => {\n        e.sender.send(\"REPLY_POST_TWEET\", { url });\n        this.emit(\"DONE_TWEET\", { url });\n      })\n      .catch(error => {\n        e.sender.send(\"REPLY_POST_TWEET\", { error });\n      });\n  }\n\n  postTweet({ message }) {\n    const loginManager = createTwitterLoginManager();\n    return loginManager.init().then(() => {\n      const client = loginManager.createClient();\n      return this.fileManager\n        .readAsBase64string(this.filename)\n        .then(data => client.uploadMedia({ media: data }))\n        .then(media => {\n          return client.updateStatuses({\n            status: message,\n            media_ids: media.media_id_string\n          });\n        })\n        .then(status => {\n          return `https://twitter.com/${status.user.name}/statuses/${\n            status.id_str\n          }`;\n        });\n    });\n  }\n\n  close() {\n    this.win.close();\n  }\n}\n\nfunction createPreviewWindow({ filename }) {\n  return new PreviewWindow({ filename });\n}\n\nexport default createPreviewWindow;\n","class TwitterClient {\n  constructor(oauth, oauthAccessToken, oauthAccessSecret) {\n    this.oauth = oauth;\n    this.oauthAccessToken = oauthAccessToken;\n    this.oauthAccessSecret = oauthAccessSecret;\n  }\n\n  verifyCredentials() {\n    return new Promise((resolve, reject) => {\n      this.oauth.get(\n        \"https://api.twitter.com/1.1/account/verify_credentials.json\",\n        this.oauthAccessToken,\n        this.oauthAccessSecret,\n        (error, data) => {\n          if (error) {\n            return reject(error);\n          } else {\n            return resolve(JSON.parse(data));\n          }\n        }\n      );\n    });\n  }\n\n  uploadMedia(params) {\n    return new Promise((resolve, reject) => {\n      this.oauth.post(\n        \"https://upload.twitter.com/1.1/media/upload.json\",\n        this.oauthAccessToken,\n        this.oauthAccessSecret,\n        params,\n        \"application/x-www-form-urlencoded\",\n        (error, data) => {\n          if (error) {\n            return reject(error);\n          } else {\n            return resolve(JSON.parse(data));\n          }\n        }\n      );\n    });\n  }\n\n  updateStatuses(params) {\n    return new Promise((resolve, reject) => {\n      this.oauth.post(\n        \"https://api.twitter.com/1.1/statuses/update.json\",\n        this.oauthAccessToken,\n        this.oauthAccessSecret,\n        params,\n        \"application/x-www-form-urlencoded\",\n        (error, data) => {\n          if (error) {\n            return reject(error);\n          } else {\n            return resolve(JSON.parse(data));\n          }\n        }\n      );\n    });\n  }\n}\n\nfunction createTwitterClient(oauth, oauthAccessToken, oauthAccessSecret) {\n  return new TwitterClient(oauth, oauthAccessToken, oauthAccessSecret);\n}\n\nexport default createTwitterClient;\n","import path from \"path\";\nimport fs from \"fs\";\nimport { app, shell, ipcMain, BrowserWindow } from \"electron\";\nimport createTwitterOAuth from \"./createTwitterOAuth\";\nimport createTwitterClient from \"./createTwitterClient\";\n\nclass TwitterLoginManager {\n  constructor() {\n    this.oauth = createTwitterOAuth();\n    this.credentialPath = path.join(\n      app.getPath(\"userData\"),\n      \".twitter_credentials\"\n    );\n  }\n\n  getAccessToken() {\n    return new Promise((resolve, reject) => {\n      this.oauth.getOAuthRequestToken(\n        (error, requestToken, requestTokenSecret) => {\n          if (error) {\n            return reject(error);\n          }\n          shell.openExternal(\n            `https://api.twitter.com/oauth/authorize?oauth_token=${requestToken}`\n          );\n\n          const pincodeWindow = new BrowserWindow({\n            width: 400,\n            height: 120,\n            maximizable: false,\n            minimizable: false,\n            resizable: false\n          });\n          ipcMain.once(\"SEND_PIN\", (e, { pincode }) => {\n            this.oauth.getOAuthAccessToken(\n              requestToken,\n              requestTokenSecret,\n              pincode,\n              (error, accessToken, accessTokenSecret) => {\n                if (error) {\n                  return reject(error);\n                }\n                resolve({ accessToken, accessTokenSecret });\n                pincodeWindow.removeAllListeners(\"close\");\n                pincodeWindow.close();\n              }\n            );\n          });\n          ipcMain.once(\"CANCEL_PIN\", () => pincodeWindow.close());\n          pincodeWindow.on(\"close\", () => reject(\"user_cancel\"));\n          pincodeWindow.loadURL(`file://${__dirname}/../../pincodeWindow.html`);\n        }\n      );\n    });\n  }\n\n  init() {\n    const loginAndVerify = () => {\n      return this.getAccessToken().then(credentials => {\n        this.saveCredentials(credentials);\n        return this.verify();\n      });\n    };\n    const credentials = this.loadCredentials();\n    if (!credentials) {\n      return loginAndVerify();\n    } else {\n      return this.verify().catch(() => {\n        return loginAndVerify();\n      });\n    }\n  }\n\n  loadCredentials() {\n    try {\n      this.credentials = JSON.parse(\n        fs.readFileSync(this.credentialPath, \"utf-8\")\n      );\n      return this.credentials;\n    } catch (e) {\n      this.credentials = null;\n      return null;\n    }\n  }\n\n  saveCredentials(credentials) {\n    this.credentials = credentials;\n    fs.writeFileSync(\n      this.credentialPath,\n      JSON.stringify(this.credentials),\n      \"utf-8\"\n    );\n  }\n\n  createClient() {\n    return createTwitterClient(\n      this.oauth,\n      this.credentials.accessToken,\n      this.credentials.accessTokenSecret\n    );\n  }\n\n  verify() {\n    return this.createClient().verifyCredentials();\n  }\n}\n\nfunction createTwitterLoginManager() {\n  return new TwitterLoginManager();\n}\n\nexport default createTwitterLoginManager;\n","import { OAuth } from \"oauth\";\n\nfunction createTwitterOAuth() {\n  return new OAuth(\n    \"https://api.twitter.com/oauth/request_token\",\n    \"https://api.twitter.com/oauth/access_token\",\n    \"5jVDtFcADABDhYss5htnatBaJ\",\n    \"x7neGkZTPmPp4uhietcv3eEOunMFYyn9koiV5NRxjFU3un9xfa\",\n    \"1.0A\",\n    null,\n    \"HMAC-SHA1\"\n  );\n}\n\nexport default createTwitterOAuth;\n","import { app, shell } from \"electron\";\nimport createFileManager from \"./createFileManager\";\nimport trimDesktop from \"./trimDesktop\";\nimport createCaptureWindow from \"./createCaptureWindow\";\nimport createPreviewWindow from \"./createPreviewWindow\";\n\nlet captureWindow;\n\nfunction captureAndOpenItem() {\n  const fileManager = createFileManager();\n  return trimDesktop()\n    .then(captureWindow.capture.bind(captureWindow))\n    .then(image => {\n      const createdFilename = fileManager.writeImage(\n        app.getPath(\"temp\"),\n        image\n      );\n      return createdFilename;\n    })\n    .then(shell.openItem.bind(shell))\n    .then(() => {\n      if (process.platform !== \"darwin\") {\n        app.quit();\n      }\n    });\n}\n\nfunction captureAndPost() {\n  const fileManager = createFileManager();\n  return trimDesktop()\n    .then(captureWindow.capture.bind(captureWindow))\n    .then(image => {\n      const createdFilename = fileManager.writeImage(\n        app.getPath(\"temp\"),\n        image\n      );\n      return createdFilename;\n    })\n    .then(filename => {\n      console.log(filename);\n      const win = createPreviewWindow({ filename });\n      win.once(\"DONE_TWEET\", ({ url }) => {\n        shell.openExternal(url);\n        win.close();\n        if (process.platform !== \"darwin\") {\n          app.quit();\n        }\n      });\n    });\n}\n\napp.on(\"ready\", () => {\n  captureWindow = createCaptureWindow();\n  // captureAndOpenItem();\n  captureAndPost();\n});\n","import { screen, ipcMain, BrowserWindow } from \"electron\";\n\nfunction trimDesktop() {\n  const displays = screen.getAllDisplays();\n  return new Promise((resolve, reject) => {\n    const windows = displays.map((display, i) => {\n      const { x, y, width, height } = display.bounds;\n      display.name = \"Screen \" + (i + 1);\n      const win = new BrowserWindow({\n        frame: false,\n        transparent: true,\n        alwaysOnTop: true,\n        x,\n        y,\n        width,\n        height\n      });\n      win.loadURL(`file://${__dirname}/../../index.html`);\n      return { win, display };\n    });\n\n    ipcMain.once(\"SEND_BOUNDS\", (e, { trimmedBounds }) => {\n      const sourceDisplay = windows.find(\n        w => w.win.webContents.id === e.sender.id\n      ).display;\n      const profile = { sourceDisplay, trimmedBounds };\n      windows.forEach(w => w.win.close());\n      resolve(profile);\n    });\n  });\n}\n\nexport default trimDesktop;\n","module.exports = require(\"crypto\");","module.exports = require(\"electron\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"path\");","module.exports = require(\"querystring\");","module.exports = require(\"url\");"],"sourceRoot":""}